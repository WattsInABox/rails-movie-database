<%= form_for(@movie) do |f| %>
  <% if @movie.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@movie.errors.count, "error") %> prohibited this movie from being saved:</h2>

      <ul>
      <% @movie.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :imdbd_id, "Movie (Autocomplete)" %><br />
    <%= f.text_field :imdb_id %>
  </div>
  <div class="field">
    <%= f.label :lists, "Lists (Autocomplete)" %><br />
    <%= f.text_field :lists, value: nil %>
  </div>
  <div class="actions">
    <%= f.submit "Add Movie to Library" %>
  </div>
<% end %>

<%= javascript_tag do -%>
$(function() {
  function split( val ) {
    return val.split( /,\s*/ );
  }

  function extractLast( term ) {
    return split( term ).pop();
  }
  <%# autocomplete the Imdb ID by searching the 
      Imdb database for the keywords typed in the Imdb ID text box %>
  $('#movie_imdb_id').autocomplete({
    source: '<%= search_movies_path(format: 'json') %>',
    minLength: 4,
    delay: 500
  })

  <%# autocomplete the multiselect of lists %>
  $( "#movie_lists" )
    // don't navigate away from the field on tab when selecting an item
    .bind( "keydown", function( event ) {
      if ( event.keyCode === $.ui.keyCode.TAB &&
          $( this ).data( "ui-autocomplete" ).menu.active ) {
        event.preventDefault();
      }
    })
    .autocomplete({
      source: function( request, response ) {
        console.debug("SOURCE")
        $.getJSON( '<%= lists_path(format: 'json') %>', {
          term: extractLast( request.term )
        }, response );
      },
      search: function() {
        // custom minLength
        console.debug("SEARCH")
        var term = extractLast( this.value );
        if ( term.length < 1 ) {
          return false;
        }
      },
      focus: function() {
        // prevent value inserted on focus
        return false;
      },
      select: function( event, ui ) {
        var terms = split( this.value );
        // remove the current input
        terms.pop();
        // add the selected item
        terms.push( ui.item.value );
        // add placeholder to get the comma-and-space at the end
        terms.push( "" );
        this.value = terms.join( ", " );
        return false;
      }
    });
});
<% end -%>